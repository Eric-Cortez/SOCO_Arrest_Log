{"version":3,"file":"static/js/614.25bf0391.chunk.js","mappings":"mOAGe,SAASA,EAAoBC,GAAkB,IAAfC,EAAUD,EAAVC,WAC7CC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAwCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GA0BpC,IAxBAG,EAAAA,EAAAA,YAAU,WACR,IAAMF,EAAe,CAAC,EACtBT,EAAWY,SAAQ,SAACC,GACFA,EAAOC,kBACpBC,MAAM,SACNC,QAAO,SAACC,GAAM,MAAgB,eAAXA,CAAuB,IACrCL,SAAQ,SAACK,GAGf,GAFAA,EAASA,EAAOC,OAAOH,MAAM,KAEjB,CACV,IAAMI,EAAYF,EAAOA,EAAOG,OAAS,GACzCX,EAAaU,IAAcV,EAAaU,IAAc,GAAK,CAC7D,CACF,GACF,IAEA,IAAMd,EAAagB,OAAOC,KAAKb,GAC5Bc,MAAK,SAACC,EAAGC,GAAC,OAAKhB,EAAagB,GAAKhB,EAAae,EAAE,IAChDE,MAAM,EAAG,IAEZpB,EAAcD,GACdK,EAAgBD,EAClB,GAAG,CAACT,IAEsB,IAAtBK,EAAWe,OACb,OAAO,KAGT,IAAMO,EAAO,CACX,CACEC,EAAGvB,EAAWwB,KAAI,SAACZ,GAAM,OAAKR,EAAaQ,EAAO,IAClDa,EAAGzB,EACH0B,KAAM,MACNC,YAAa,MAoBjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBF,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CACHT,KAAMA,EACNU,OArBS,CACbC,MAAO,oBACPC,OAAQ,CACNC,EAAG,IACHC,EAAG,GACHC,EAAG,GACHjB,EAAG,IAELkB,MAAO,CAAEL,MAAO,qBAChBM,MAAO,CACLN,MAAO,qBACPO,SAAU,SACVC,YAAY,EACZC,MAAO,IASLC,OAAQ,CAAEC,gBAAgB,GAC1BC,kBAAkB,KAI1B,C","sources":["pages/components/TopChargeChart/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nexport default function TopChargedescription({ arrestData }) {\n  const [topCharges, setTopCharges] = useState([]);\n  const [chargeCounts, setChargeCounts] = useState([]);\n\n  useEffect(() => {\n    const chargeCounts = {};\n    arrestData.forEach((arrest) => {\n      const charges = arrest.chargedescription\n        .split(\"<br/>\")\n        .filter((charge) => charge !== \"----------\");\n      charges.forEach((charge) => {\n        charge = charge.trim().split(\";\");\n\n        if (charge) {\n          const shortName = charge[charge.length - 1];\n          chargeCounts[shortName] = (chargeCounts[shortName] || 0) + 1;\n        }\n      });\n    });\n\n    const topCharges = Object.keys(chargeCounts)\n      .sort((a, b) => chargeCounts[b] - chargeCounts[a])\n      .slice(0, 10);\n\n    setTopCharges(topCharges);\n    setChargeCounts(chargeCounts);\n  }, [arrestData]);\n\n  if (topCharges.length === 0) {\n    return null;\n  }\n\n  const data = [\n    {\n      x: topCharges.map((charge) => chargeCounts[charge]),\n      y: topCharges,\n      type: \"bar\",\n      orientation: \"h\",\n    },\n  ];\n  const layout = {\n    title: \"Arrests by Charge\",\n    margin: {\n      l: 150,\n      r: 20,\n      t: 60,\n      b: 50,\n    },\n    xaxis: { title: \"Number of Arrests\" },\n    yaxis: {\n      title: \"Charge description\",\n      tickmode: \"linear\",\n      automargin: true,\n      dtick: 1,\n    },\n  };\n\n  return (\n    <div className=\"bar-chart\">\n      <Plot\n        data={data}\n        layout={layout}\n        config={{ displayModeBar: false }}\n        useResizeHandler={true}\n      />\n    </div>\n  );\n}\n"],"names":["TopChargedescription","_ref","arrestData","_useState","useState","_useState2","_slicedToArray","topCharges","setTopCharges","_useState3","_useState4","chargeCounts","setChargeCounts","useEffect","forEach","arrest","chargedescription","split","filter","charge","trim","shortName","length","Object","keys","sort","a","b","slice","data","x","map","y","type","orientation","_jsx","className","children","Plot","layout","title","margin","l","r","t","xaxis","yaxis","tickmode","automargin","dtick","config","displayModeBar","useResizeHandler"],"sourceRoot":""}